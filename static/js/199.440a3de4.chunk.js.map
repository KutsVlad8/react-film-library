{"version":3,"file":"static/js/199.440a3de4.chunk.js","mappings":"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","sources":["components/servise/Api.jsx","pages/MoviesDetails/MoviesDetails.styled.jsx","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '048dfb7517a31fb5a77ea118ba208738';\n\n// Отримує параметр поточної сторінки та повертає промікс фільмів що були в тренді протягом дня\nexport async function getDayTrending(page = 1) {\n  const url = `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=${page}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\n// Робить пошук поточного фільму\nexport async function getSearchMovie(query) {\n  const url = `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\n// Отримує параметр поточного фільму\nexport async function getMovieInfo(movie_id) {\n  const url = `${MAIN_URL}/movie/${movie_id}?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\n// Отримує актерський состав фільму\nexport async function getMovieCast(movie_id) {\n  const url = `${MAIN_URL}/movie/${movie_id}/credits?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\n// Отримує актерський состав фільму\nexport async function getMovieReviews(movie_id) {\n  const url = `${MAIN_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Card = styled.div`\n  display: flex;\n  padding: 15px;\n`;\n\nexport const CardContent = styled.div`\n  margin-left: 20px;\n`;\n\nexport const InfoList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const InfoListItem = styled.li``;\n\nexport const Img = styled.img`\n  width: 300px;\n`;\n\nexport const InfoListItemLink = styled(Link)`\n  text-decoration: none;\n  font-family: sans-serif;\n  color: darkslategray;\n  font-size: 18px;\n`;\n\nexport const BackLink = styled(Link)`\n  display: inline-block;\n  height: 20px;\n  text-decoration: none;\n  border: 1px solid darkslategray;\n  border-radius: 3px;\n  cursor: pointer;\n  outline: none;\n  width: 45px;\n  text-align: center;\n  margin-top: 10px;\n  margin-left: 15px;\n\n  &:hover,\n  &:focus {\n    background-color: darkslategray;\n    color: white;\n  }\n`;\n\nexport const GenresList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const MovieName = styled.h2`\n  font-family: sans-serif;\n  color: darkslategray;\n  margin-top: 5px;\n  margin-bottom: 10px;\n  font-size: 30px;\n`;\n\nexport const Title = styled.h3`\n  font-family: sans-serif;\n  color: darkslategray;\n  margin-top: 0;\n  margin-bottom: 5px;\n  font-size: 18px;\n`;\n\nexport const Content = styled.p`\n  font-family: sans-serif;\n  color: darkslategray;\n  margin-top: 0;\n  margin-bottom: 10px;\n  font-size: 18px;\n`;\n","import { useEffect, useState, useRef, Suspense } from 'react';\n\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieInfo } from 'components/servise/Api';\nimport {\n  Card,\n  CardContent,\n  GenresList,\n  InfoList,\n  InfoListItem,\n  InfoListItemLink,\n  Img,\n  BackLink,\n  MovieName,\n  Title,\n  Content,\n} from './MoviesDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport img from '../../images/noFoto.jpg';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState({});\n  const location = useLocation();\n  const backLocation = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const movie = await getMovieInfo(movieId);\n\n        setMovieInfo(movie);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetch();\n  }, [movieId]);\n\n  const genres = movieInfo.genres;\n\n  console.log(movieInfo);\n\n  return (\n    <>\n      <BackLink to={backLocation.current}>Back </BackLink>\n      <Card>\n        <Img\n          src={\n            movieInfo.poster_path\n              ? `https://image.tmdb.org/t/p/w300${movieInfo.poster_path}`\n              : img\n          }\n          alt={movieInfo.title || movieInfo.name}\n        />\n        <CardContent>\n          <MovieName>{movieInfo.title || movieInfo.name}</MovieName>\n          <Title>Release</Title>\n          <Content> {movieInfo.release_date}</Content>\n          <Title>Overview</Title>\n          <Content> {movieInfo.overview}</Content>\n\n          <Title>Genres</Title>\n          <GenresList>\n            {genres ? (\n              genres.map(genre => (\n                <li key={genre.id}>\n                  <Content>{genre.name}</Content>\n                </li>\n              ))\n            ) : (\n              <p>no genres</p>\n            )}\n          </GenresList>\n          <Title>Runtime</Title>\n          <Content> {movieInfo.runtime} min</Content>\n        </CardContent>\n      </Card>\n      <InfoList>\n        <InfoListItem>\n          <InfoListItemLink to=\"cast\">Cast</InfoListItemLink>\n        </InfoListItem>\n        <InfoListItem>\n          <InfoListItemLink to=\"reviews\">Rewies</InfoListItemLink>\n        </InfoListItem>\n      </InfoList>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["MAIN_URL","API_KEY","getDayTrending","page","url","axios","then","response","data","catch","error","console","log","getSearchMovie","query","getMovieInfo","movie_id","getMovieCast","getMovieReviews","Card","styled","CardContent","InfoList","InfoListItem","Img","InfoListItemLink","Link","BackLink","GenresList","MovieName","Title","Content","movieId","useParams","useState","movieInfo","setMovieInfo","location","useLocation","backLocation","useRef","state","from","useEffect","fetch","movie","genres","to","current","src","poster_path","img","alt","title","name","release_date","overview","map","genre","id","runtime","Suspense","fallback","Loader"],"sourceRoot":""}