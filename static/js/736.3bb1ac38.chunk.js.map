{"version":3,"file":"static/js/736.3bb1ac38.chunk.js","mappings":"gRAEaA,EAAWC,EAAAA,EAAAA,GAAH,uIAURC,EAAeD,EAAAA,EAAAA,GAAH,oEAIZE,EAAOF,EAAAA,EAAAA,EAAH,mHAOJG,EAAMH,EAAAA,EAAAA,IAAH,+DAIHI,EAAUJ,EAAAA,EAAAA,EAAH,2I,mBCsBpB,EA3Ca,WACX,OAAkCK,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,8GAESC,EAAAA,EAAAA,IAAaJ,GAFtB,OAEJK,EAFI,OAGVN,EAAaM,EAAKA,MAClBC,QAAQC,IAAIF,EAAKA,MAJP,gDAMVC,QAAQC,IAAR,MANU,yDAAH,qDAUXJ,GACD,GAAE,CAACH,KAGF,8BACwB,IAArBF,EAAUU,QACT,SAACZ,EAAD,UAAS,kDAET,SAACL,EAAD,UACGO,EAAUW,KAAI,SAAAC,GAAK,OAClB,UAACjB,EAAD,YACE,SAACC,EAAD,UAAOgB,EAAMC,QACb,SAAChB,EAAD,CACEiB,IACEF,EAAMG,aAAN,yCACsCH,EAAMG,cACxCC,EAENC,IAAKL,EAAMC,SARID,EAAMM,QADP,OAiB7B,C,mMC7CKC,EAAW,+BACXC,EAAU,mCAGT,SAAeC,IAAtB,+B,aAAO,O,oBAAA,yGAA8BC,EAA9B,+BAAqC,EACpCC,EADD,UACUJ,EADV,qCAC+CC,EAD/C,iBAC+DE,GAD/D,SAEQE,EAAAA,EAAAA,IACND,GACJE,MAAK,SAAAC,GACJ,OAAOA,EAASC,IACjB,IACAC,OAAM,SAAAC,GAAK,OAAIrB,QAAQC,IAAIoB,EAAhB,IAPT,2GAWA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA8BC,GAA9B,8EACCR,EADD,UACUJ,EADV,iCAC2CC,EAD3C,kBAC4DW,GAD5D,SAEQP,EAAAA,EAAAA,IACND,GACJE,MAAK,SAAAC,GACJ,OAAOA,EAASC,IACjB,IACAC,OAAM,SAAAC,GAAK,OAAIrB,QAAQC,IAAIoB,EAAhB,IAPT,0GAWA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA4BC,GAA5B,8EACCV,EADD,UACUJ,EADV,kBAC4Bc,EAD5B,oBACgDb,GADhD,SAEQI,EAAAA,EAAAA,IACND,GACJE,MAAK,SAAAC,GACJ,OAAOA,EAASC,IACjB,IACAC,OAAM,SAAAC,GAAK,OAAIrB,QAAQC,IAAIoB,EAAhB,IAPT,0GAWA,SAAevB,EAAtB,kC,aAAO,O,oBAAA,WAA4B2B,GAA5B,8EACCV,EADD,UACUJ,EADV,kBAC4Bc,EAD5B,4BACwDb,GADxD,SAEQI,EAAAA,EAAAA,IACND,GACJE,MAAK,SAAAC,GACJ,OAAOA,EAASC,IACjB,IACAC,OAAM,SAAAC,GAAK,OAAIrB,QAAQC,IAAIoB,EAAhB,IAPT,0GAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,8EACCV,EADD,UACUJ,EADV,kBAC4Bc,EAD5B,4BACwDb,GADxD,SAEQI,EAAAA,EAAAA,IACND,GACJE,MAAK,SAAAC,GACJ,OAAOA,EAASC,IACjB,IACAC,OAAM,SAAAC,GAAK,OAAIrB,QAAQC,IAAIoB,EAAhB,IAPT,0G","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/servise/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ListCast = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  padding: 0;\n  margin-bottom: 0;\n\n  list-style: none;\n`;\n\nexport const ListCastItem = styled.li`\n  flex-basis: calc((100% - 4 * 30px) / 5);\n`;\n\nexport const Name = styled.p`\n  font-family: sans-serif;\n  font-size: 18px;\n  color: darkslategray;\n  margin-top: 0;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  border-radius: 5px;\n`;\nexport const Content = styled.p`\n  font-family: sans-serif;\n  color: darkslategray;\n  margin-top: 0;\n  margin-bottom: 10px;\n  font-size: 16px;\n`;\n","import { getMovieCast } from 'components/servise/Api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Img, ListCast, ListCastItem, Name, Content } from './Cast.styled';\nimport img from '../../images/noFoto.jpg';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const cast = await getMovieCast(movieId);\n        setMovieCast(cast.cast);\n        console.log(cast.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetch();\n  }, [movieId]);\n\n  return (\n    <>\n      {movieCast.length === 0 ? (\n        <Content>Sorry, we did not find the cast of this film</Content>\n      ) : (\n        <ListCast>\n          {movieCast.map(actor => (\n            <ListCastItem key={actor.cast_id}>\n              <Name>{actor.name}</Name>\n              <Img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n                    : img\n                }\n                alt={actor.name}\n              />\n            </ListCastItem>\n          ))}\n        </ListCast>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '048dfb7517a31fb5a77ea118ba208738';\n\n// Отримує параметр поточної сторінки та повертає промікс фільмів що були в тренді протягом дня\nexport async function getDayTrending(page = 1) {\n  const url = `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=${page}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\n// Робить пошук поточного фільму\nexport async function getSearchMovie(query) {\n  const url = `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\n// Отримує параметр поточного фільму\nexport async function getMovieInfo(movie_id) {\n  const url = `${MAIN_URL}/movie/${movie_id}?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\n// Отримує актерський состав фільму\nexport async function getMovieCast(movie_id) {\n  const url = `${MAIN_URL}/movie/${movie_id}/credits?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\n// Отримує актерський состав фільму\nexport async function getMovieReviews(movie_id) {\n  const url = `${MAIN_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n"],"names":["ListCast","styled","ListCastItem","Name","Img","Content","useState","movieCast","setMovieCast","movieId","useParams","useEffect","fetch","getMovieCast","cast","console","log","length","map","actor","name","src","profile_path","img","alt","cast_id","MAIN_URL","API_KEY","getDayTrending","page","url","axios","then","response","data","catch","error","getSearchMovie","query","getMovieInfo","movie_id","getMovieReviews"],"sourceRoot":""}