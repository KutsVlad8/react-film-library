{"version":3,"file":"static/js/485.d75441cf.chunk.js","mappings":"wMAGaA,EAAOC,EAAAA,EAAAA,GAAH,yIAUJC,EAAWD,EAAAA,EAAAA,GAAH,oEAIRE,GAAeF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,yEAKZI,EAAQJ,EAAAA,EAAAA,GAAH,qEAKLK,EAAML,EAAAA,EAAAA,IAAH,kF,6BCEhB,EAzBmB,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAACT,EAAD,UACGO,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACT,EAAD,WACE,UAACC,EAAD,CAAcS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAxD,WACE,SAACH,EAAD,UAAQM,EAAMK,OAASL,EAAMM,QAC7B,SAACX,EAAD,CACEY,IACEP,EAAMQ,YAAN,yCACsCR,EAAMQ,aACxCC,EAENC,IAAKV,EAAMK,OAASL,EAAMM,WATjBN,EAAME,GADN,OAkBxB,C,mMCzBKS,EAAW,+BACXC,EAAU,mCAGT,SAAeC,IAAtB,+B,aAAO,O,oBAAA,yGAA8BC,EAA9B,+BAAqC,EACpCC,EADD,UACUJ,EADV,qCAC+CC,EAD/C,iBAC+DE,GAD/D,SAEQE,EAAAA,EAAAA,IACND,GACJE,MAAK,SAAAC,GACJ,OAAOA,EAASC,IACjB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPT,2GAWA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA8BC,GAA9B,8EACCV,EADD,UACUJ,EADV,iCAC2CC,EAD3C,kBAC4Da,GAD5D,SAEQT,EAAAA,EAAAA,IACND,GACJE,MAAK,SAAAC,GACJ,OAAOA,EAASC,IACjB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPT,0GAWA,SAAeK,EAAtB,kC,aAAO,O,oBAAA,WAA4BC,GAA5B,8EACCZ,EADD,UACUJ,EADV,kBAC4BgB,EAD5B,oBACgDf,GADhD,SAEQI,EAAAA,EAAAA,IACND,GACJE,MAAK,SAAAC,GACJ,OAAOA,EAASC,IACjB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPT,0GAWA,SAAeO,EAAtB,kC,aAAO,O,oBAAA,WAA4BD,GAA5B,8EACCZ,EADD,UACUJ,EADV,kBAC4BgB,EAD5B,4BACwDf,GADxD,SAEQI,EAAAA,EAAAA,IACND,GACJE,MAAK,SAAAC,GACJ,OAAOA,EAASC,IACjB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPT,0GAWA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,8EACCZ,EADD,UACUJ,EADV,kBAC4BgB,EAD5B,4BACwDf,GADxD,SAEQI,EAAAA,EAAAA,IACND,GACJE,MAAK,SAAAC,GACJ,OAAOA,EAASC,IACjB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPT,0G,kKChDM3B,E,QAAQJ,EAAAA,GAAH,4F,SC2BlB,EAxBa,WACX,OAA4CwC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEyBpB,EAAAA,EAAAA,MAFzB,OAEUjB,EAFV,OAGIoC,GAAkB,OAAIpC,EAAOsC,UAHjC,gDAKIZ,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBAUdY,EACD,GAAE,KAGD,iCACE,SAACzC,EAAD,UAAO,qBACP,SAAC0C,EAAA,EAAD,CAAYxC,OAAQmC,MAGzB,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/servise/Api.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  padding: 0;\n  margin-bottom: 5px;\n\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  flex-basis: calc((100% - 2 * 30px) / 3);\n`;\n\nexport const ListLinkItem = styled(Link)`\n  text-align: center;\n  text-decoration: none;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 0px;\n  color: darkslategray;\n`;\n\nexport const Img = styled.img`\n  display: block;\n  width: 100%;\n  border-radius: 8px;\n`;\n","import { List, ListItem, ListLinkItem, Title, Img } from './MoviesList.styled';\nimport img from '../../images/noFoto.jpg';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(movie => (\n          <ListItem key={movie.id}>\n            <ListLinkItem to={`/movies/${movie.id}`} state={{ from: location }}>\n              <Title>{movie.title || movie.name}</Title>\n              <Img\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n                    : img\n                }\n                alt={movie.title || movie.name}\n              />\n            </ListLinkItem>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default MoviesList;\n","import axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '048dfb7517a31fb5a77ea118ba208738';\n\n// Отримує параметр поточної сторінки та повертає промікс фільмів що були в тренді протягом дня\nexport async function getDayTrending(page = 1) {\n  const url = `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=${page}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\n// Робить пошук поточного фільму\nexport async function getSearchMovie(query) {\n  const url = `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\n// Отримує параметр поточного фільму\nexport async function getMovieInfo(movie_id) {\n  const url = `${MAIN_URL}/movie/${movie_id}?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\n// Отримує актерський состав фільму\nexport async function getMovieCast(movie_id) {\n  const url = `${MAIN_URL}/movie/${movie_id}/credits?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\n// Отримує актерський состав фільму\nexport async function getMovieReviews(movie_id) {\n  const url = `${MAIN_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  margin-top: 8px;\n  text-align: center;\n  color: darkslategray;\n`;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { getDayTrending } from '../../components/servise/Api';\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const movies = await getDayTrending();\n        setTrendingMovies([...movies.results]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetch();\n  }, []);\n\n  return (\n    <>\n      <Title>Trending today </Title>\n      <MoviesList movies={trendingMovies} />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["List","styled","ListItem","ListLinkItem","Link","Title","Img","movies","location","useLocation","map","movie","to","id","state","from","title","name","src","poster_path","img","alt","MAIN_URL","API_KEY","getDayTrending","page","url","axios","then","response","data","catch","error","console","log","getSearchMovie","query","getMovieInfo","movie_id","getMovieCast","getMovieReviews","useState","trendingMovies","setTrendingMovies","useEffect","results","fetch","MoviesList"],"sourceRoot":""}